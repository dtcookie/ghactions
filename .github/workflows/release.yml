on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Release

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
      - name: Check out source code
        uses: actions/checkout@v1
      - name: Build Linux amd64
        env:
          GOPROXY: "https://proxy.golang.org"
          GOOS: linux
          GOARCH: amd64
        run: go build -o ./dist/linux/amd64/ghactions .
      - name: Build Windows amd64
        env:
          GOPROXY: "https://proxy.golang.org"
          GOOS: windows
          GOARCH: amd64
        run: go build -o ./dist/windows/amd64/ghactions.exe .
      - name: Package Binaries
        run: |
          cd dist ; zip -r ghactions.zip .
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dist/ghactions.zip
          asset_name: ghactions-${{ github.ref }}.zip
          asset_content_type: application/zip